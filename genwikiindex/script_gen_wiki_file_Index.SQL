/*
 # ADempiere contribution
 # Author: Alejandro Falcone - openbiz
 # Generates Index Manual wiki page from the menu Tree
 # 
*/


DECLARE
/* REPLACE THIS VALUE WITH YOU NEED
 # (i.e. en_US, de_DE, ru_RU, etc) */
   v_language         VARCHAR (10)       := 'en_US_base';
/* REPLACE THIS VALUE WITH YOU NEED
 # Change the following values with the translation for your language!
 # Those are the Titles
*/
   v_str_msg1         VARCHAR (500)
      := 'This index is based on ADempiere 3.1.0 menu. As an aggregated value you will find:';
   v_str_msg2         VARCHAR (500)
      := '* in second column the program type: Workbench, WorkFlow, Process, Report, Task, Window, Form, Menu.';
   v_str_msg3         VARCHAR (500)
      :=    '* in third column the name of involved tables, and the name of reports '
         || 'and/or processes inside that option.';
   v_str_msg4         VARCHAR (500)
      :=    'This information is already a good technical help, i.e. if you want '
         || 'to know which window is used to maintain a table, you can find that table on this page and it '
         || 'will show you which is the corresponding maintenance window. Same if you want to find which '
         || 'window executes a process, you find it and it will show the window/process/report.';
   v_str_modify       VARCHAR (500)
      := 'Please don''t modify the content, because this index is automatically generated by a script.';
/* END REPLACE THIS VALUE WITH YOU NEED */
   v_str_man_index    VARCHAR (200);
   str_end            VARCHAR (5);
   f_main             UTL_FILE.file_type;
   v_file             VARCHAR (80)       := ' ';
   v_wname            VARCHAR (80);
   v_bold             VARCHAR (3)        := '''''''';         -- For Bold Text
   v_ital             VARCHAR (2)        := '''''';         -- For Italic Text
   v_str_dot          VARCHAR (80);
   v_str_sec          VARCHAR (5)        := '';
   v_flag_opentable   BOOLEAN;

   CURSOR c1
   IS
      SELECT     LEVEL, LEVEL - 1 AS levelparent, issummary, m.name,
                 m.action AS TYPE,
                 DECODE (m.action,
                         'B', 'Workbench',
                         'F', 'WorkFlow',
                         'P', 'Process',
                         'R', 'Report',
                         'T', 'Task',
                         'W', 'Window',
                         'X', 'Form',
                         '', 'Menu',
                         '?'
                        ) AS action,
                 NVL
                    (f.classname,
                     NVL (p.classname,
                          NVL (p.procedurename,
                               NVL (k.os_command,
                                    qss_get_tables_from_window (m.ad_window_id)
                                   )
                              )
                         )
                    ) AS technical
            FROM ad_treenodemm t,
                 ad_menu m,
                 ad_process p,
                 ad_form f,
                 ad_task k
           WHERE t.ad_tree_id = 10
             AND t.node_id = m.ad_menu_id
             AND m.ad_process_id = p.ad_process_id(+)
             AND m.ad_form_id = f.ad_form_id(+)
             AND m.ad_task_id = k.ad_task_id(+)
             AND m.isactive = 'Y'
             AND m.entitytype = 'D'
      CONNECT BY NOCYCLE PRIOR t.node_id = t.parent_id
      START WITH t.parent_id = 0 OR parent_id IS NULL
        ORDER SIBLINGS BY t.seqno;
BEGIN
   IF LOWER (SUBSTR (v_language, 1, 2)) <> 'en'
   THEN
      str_end := '_' || LOWER (SUBSTR (v_language, 1, 2));
   ELSE
      str_end := '';
   END IF;

   v_file := 'Manual' || str_end || '.wiki';
   -- Generate Main Page
   f_main := UTL_FILE.fopen ('DIR_TEMP', v_file, 'w');
   v_flag_opentable := FALSE;
   UTL_FILE.put_line (f_main, v_str_msg1);
   UTL_FILE.put_line (f_main, v_str_msg2);
   UTL_FILE.put_line (f_main, v_str_msg3);
   UTL_FILE.put_line (f_main, v_str_msg4);
   UTL_FILE.put_line (f_main, ' ');
   UTL_FILE.put_line (f_main,
                      '<center><small>' || v_str_modify || '</small></center>'
                     );

   FOR r IN c1
   LOOP
      v_str_sec := '';

      IF (r.LEVEL <= 4 AND r.issummary = 'Y')
      THEN
         v_str_sec := TRIM (RPAD (' ', r.LEVEL + 1, '='));
      END IF;

      IF r.issummary = 'Y'
      THEN
         IF v_flag_opentable
         THEN
            -- Table is Open -> Close Table
            UTL_FILE.put_line (f_main, '|}');
            v_flag_opentable := FALSE;
         END IF;

         IF r.levelparent = 0
         THEN
            -- Insert Empty Line
            UTL_FILE.put_line (f_main, ' ');
            UTL_FILE.put_line (f_main, ' ');
         END IF;

         -- Title
         UTL_FILE.put_line (f_main, v_str_sec || TRIM (r.name) || v_str_sec);
         UTL_FILE.put_line (f_main, ' ');
      ELSE
         -- Table Format
         IF NOT v_flag_opentable
         THEN
            v_flag_opentable := TRUE;
            -- Flag activated to indicate Table is Open
            UTL_FILE.put_line (f_main, '{|');
            UTL_FILE.put_line (f_main, '|-');
         END IF;                                       --  IF v_flag_openTable

         v_str_dot :=
                 TRIM (LPAD (' ', ((r.levelparent + 1) * (r.LEVEL - 2)), '.'));
         UTL_FILE.put_line (f_main, '|-valign="top"');
         UTL_FILE.put_line (f_main,
                               '|width="280"|'
                            || '[[ManPage'
                            || UPPER (r.TYPE)
                            || '_'
                            || TRIM (TRANSLATE (r.name, '_&, /', '_'))
                            || '|'
                            || '<span style="color: white;">'
                            || v_str_dot
                            || '</span>'
                            || r.name
                            || ']]'
                           );
         UTL_FILE.put_line
                      (f_main,
                          '|width="80"|<span style="font-variant:small-caps">'
                       || r.action
                       || '</span>'
                      );
         UTL_FILE.put_line (f_main,
                            '|width="450"|<small>' || r.technical
                            || '</small>'
                           );
         UTL_FILE.put_line (f_main, '|-valign="top"');
         UTL_FILE.put_line (f_main, '|-');
         UTL_FILE.put_line (f_main, ' ');
      END IF;                                         --  IF r.issummary = 'Y'
   --
   END LOOP;

   IF v_flag_opentable
   THEN
      -- Table is Open -> Close Table
      UTL_FILE.put_line (f_main, '|}');
   END IF;
   
   UTL_FILE.put_line (f_main, ' ');
   UTL_FILE.put_line (f_main, '[[Category:Developer documentation]]');
   UTL_FILE.put_line (f_main, ' ');

   UTL_FILE.fclose (f_main);
END;
