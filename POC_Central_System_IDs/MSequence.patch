Index: MSequence.java
===================================================================
--- MSequence.java	(revision 3517)
+++ MSequence.java	(working copy)
@@ -21,6 +21,9 @@
 import java.util.*;
 import java.util.logging.*;
 
+import java.io.*;
+import java.net.*;
+
 import org.compiere.db.CConnection;
 import org.compiere.interfaces.Server;
 import org.compiere.util.*;
@@ -96,7 +99,7 @@
 				+ " AND IsActive='Y' AND IsTableID='Y' AND IsAutoSequence='Y' "
 				+ " FOR UPDATE OF AD_Sequence ";						
 			USE_PROCEDURE=false;
-		}	
+		}
 		else	
 		{
 			selectSQL = "SELECT CurrentNext, CurrentNextSys, IncrementNo, AD_Sequence_ID "	
@@ -140,30 +143,41 @@
 						+ ")");
 				if (rs.next())
 				{
-					int AD_Sequence_ID = rs.getInt(4);
-					//
-					if (USE_PROCEDURE)
-					{
-						retValue = nextID(conn, AD_Sequence_ID, adempiereSys);
-					}
-					else
-					{
+					int AD_Sequence_ID = rs.getInt(4);
+					if (adempiereSys) {
+						// get ID from http site
+						retValue = getNextID_HTTP(TableName);
 						PreparedStatement updateSQL;
-						int incrementNo = rs.getInt(3);
-						if (adempiereSys) {
-							updateSQL = conn
-									.prepareStatement("UPDATE AD_Sequence SET CurrentNextSys = CurrentNextSys + ? WHERE AD_Sequence_ID = ?");
-							retValue = rs.getInt(2);
-						} else {
-							updateSQL = conn
-									.prepareStatement("UPDATE AD_Sequence SET CurrentNext = CurrentNext + ? WHERE AD_Sequence_ID = ?");
-							retValue = rs.getInt(1);
-						}
-						updateSQL.setInt(1, incrementNo);
-						updateSQL.setInt(2, AD_Sequence_ID);
+						updateSQL = conn.prepareStatement("UPDATE AD_Sequence SET CurrentNextSys = ? + 1 WHERE AD_Sequence_ID = ?");
+						updateSQL.setInt(1, retValue);
+						updateSQL.setInt(2, AD_Sequence_ID);
 						updateSQL.executeUpdate();
-						updateSQL.close();
-					} 
+						updateSQL.close();
+					} else {
+						//
+						if (USE_PROCEDURE)
+						{
+							retValue = nextID(conn, AD_Sequence_ID, adempiereSys);
+						}
+						else
+						{
+							PreparedStatement updateSQL;
+							int incrementNo = rs.getInt(3);
+							if (adempiereSys) {
+								updateSQL = conn
+										.prepareStatement("UPDATE AD_Sequence SET CurrentNextSys = CurrentNextSys + ? WHERE AD_Sequence_ID = ?");
+								retValue = rs.getInt(2);
+							} else {
+								updateSQL = conn
+										.prepareStatement("UPDATE AD_Sequence SET CurrentNext = CurrentNext + ? WHERE AD_Sequence_ID = ?");
+								retValue = rs.getInt(1);
+							}
+							updateSQL.setInt(1, incrementNo);
+							updateSQL.setInt(2, AD_Sequence_ID);
+							updateSQL.executeUpdate();
+							updateSQL.close();
+						} 
+					}
 					
 					if (trx == null)
 						conn.commit();
@@ -940,6 +954,9 @@
 	 */
 	static public void main (String[] args)
 	{
+		// int id = getNextID_HTTP("AD_Column");
+		// if (true) return;
+		
 		org.compiere.Adempiere.startup(true);
 		CLogMgt.setLevel(Level.SEVERE);
 		CLogMgt.setLoggerLevel(Level.SEVERE, null);
@@ -1161,5 +1178,79 @@
 			}
 		}
 	}	//	GetIDs
+	
+	/**
+	 *	Get next number for Key column = 0 is Error.
+	 *  @param AD_Client_ID client
+	 *  @param TableName table name
+	 * 	@param trxName optional Transaction Name
+	 *  @return next no or (-1=not found, -2=error)
+	 */
+	public static synchronized int getNextID_HTTP (String TableName)
+	{
+		int retValue = -1;
+		StringBuffer read = new StringBuffer("");
+		String website = MSysConfig.getValue("DICT_WEBSITE"); // "http://adempiere.globalqss.com/cgi-bin/get_ID";
+		// TODO: Implement httpd authentication	
+		String prm_USER = MSysConfig.getValue("DICT_USER");  // "globalqss";
+		String prm_PASSWORD = MSysConfig.getValue("DICT_PASSWORD");  // "password_inseguro";
+		String prm_TABLE = TableName;
+		String prm_ALTKEY = "";  // TODO: generate alt-key based on key of table
+		String prm_COMMENT = MSysConfig.getValue("DICT_COMMENTS");
+
+		try {
+			String completeUrl = website + "?" + "USER="
+					+ URLEncoder.encode(prm_USER, "UTF-8") + "&PASSWORD="
+					+ URLEncoder.encode(prm_PASSWORD, "UTF-8") + "&TABLE="
+					+ URLEncoder.encode(prm_TABLE, "UTF-8") + "&ALTKEY="
+					+ URLEncoder.encode(prm_ALTKEY, "UTF-8") + "&COMMENT="
+					+ URLEncoder.encode(prm_COMMENT, "UTF-8");
+				
+			// Now use the URL class to parse the user-specified URL into
+			// its various parts: protocol, host, port, filename.  Check the protocol
+			URL url = new URL(completeUrl);
+			String protocol = url.getProtocol();
+			if (!protocol.equals("http"))
+				throw new IllegalArgumentException("URL must use 'http:' protocol");
+			String host = url.getHost();
+			int port = url.getPort();
+			if (port == -1) port = 80;  // if no port, use the default HTTP port
+			String filename = url.getFile();
+			// Open a network socket connection to the specified host and port
+			Socket socket = new Socket(host, port);
+			// Get input and output streams for the socket
+			InputStream from_server = socket.getInputStream();
+			PrintWriter to_server = 
+				new PrintWriter(new OutputStreamWriter(socket.getOutputStream()));
+
+			// Send the HTTP GET command to the Web server, specifying the file.
+			// This uses an old and very simple version of the HTTP protocol
+			to_server.println("GET " + filename);
+			to_server.flush();  // Send it right now!
+
+			// Now read the server's response, and write it to the file
+			byte[] buffer = new byte[4096];
+			int bytes_read;
+			while((bytes_read = from_server.read(buffer)) != -1) {
+				for (int i = 0; i < bytes_read; i++) {
+					if (buffer[i] != 10)
+						read.append((char) buffer[i]);
+				}
+			}
+
+			// When the server closes the connection, we close our stuff
+			socket.close();
+			retValue = Integer.parseInt(read.toString());
+			if (retValue <= 0)
+				retValue = -1;
+		}
+		catch (Exception e) {    // Report any errors that arise
+			System.err.println(e);
+			retValue = -1;
+		}
+		s_log.log(Level.INFO, "getNextID_HTTP - " + TableName + "=" + read + "(" + retValue + ")"); 
+	    
+		return retValue;
+	}
 	
-}	//	MSequence
+}	//	MSequence
\ No newline at end of file
